<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.29.5">
      <projectUrl>https://github.com/$GIT_ROOT/Cars_Sample_App/</projectUrl>
      <displayName>Cars App Server</displayName>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@4.1.1">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>https://github.com/$GIT_ROOT/Cars_Sample_App/</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.SCMTrigger>
      <spec>H/5 * * * *</spec>
      <ignorePostCommitHooks>false</ignorePostCommitHooks>
    </hudson.triggers.SCMTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>cd app_server
mvn clean install
</command>
    </hudson.tasks.Shell>
    <com.nirima.jenkins.plugins.docker.builder.DockerBuilderPublisher plugin="docker-plugin@1.1.9">
      <dockerFileDirectory>app_server</dockerFileDirectory>
      <fromRegistry plugin="docker-commons@1.16"/>
      <tags>
        <string>tombatchelor/carsdemo:$GIT_COMMIT</string>
      </tags>
      <pushOnSuccess>true</pushOnSuccess>
      <pushCredentialsId>TomDocker</pushCredentialsId>
      <cleanImages>true</cleanImages>
      <cleanupWithJenkinsJobDelete>false</cleanupWithJenkinsJobDelete>
      <cloud>docker</cloud>
      <noCache>false</noCache>
      <pull>false</pull>
    </com.nirima.jenkins.plugins.docker.builder.DockerBuilderPublisher>
    <hudson.tasks.Shell>
      <command>kubectl scale --replicas=0 deployment/cars-deployment
sleep 30
kubectl set image deployment/cars-deployment app-server=tombatchelor/carsdemo:$GIT_COMMIT
kubectl scale --replicas=3 deployment/cars-deployment
sleep 60</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>export GIT_COMMIT_NAME=&quot;`git log --format=%an -n 1`&quot;
export GIT_COMMIT_EMAIL=&quot;`git log --format=%ae -n 1`&quot;
export GIT_COMMIT_SUBJECT=&quot;`git log --format=%s -n 1`&quot;
echo $GIT_COMMIT_NAME
export AUTH=&quot;Authorization: Bearer $CUSTOMER_ID $TOKEN&quot;
curl  -X POST https://collect.observe-staging.com/v1/observations/jenkins -H &apos;Content-Type: application/json&apos; -H &quot;$AUTH&quot; -d &apos;{&quot;BUILD_NUMBER&quot;:&quot;&apos;$BUILD_NUMBER&apos;&quot;,&quot;BUILD_ID&quot;:&quot;&apos;$BUILD_ID&apos;&quot;,&quot;JOB_NAME&quot;:&quot;&apos;$JOB_NAME&apos;&quot;,&quot;GIT_COMMIT&quot;:&quot;&apos;$GIT_COMMIT&apos;&quot;,&quot;GIT_BRANCH&quot;:&quot;&apos;$GIT_BRANCH&apos;&quot;,&quot;GIT_COMMITTER_NAME&quot;:&quot;&apos;&quot;$GIT_COMMIT_NAME&quot;&apos;&quot;,&quot;GIT_COMMITTER_EMAIL&quot;:&quot;&apos;&quot;$GIT_COMMIT_EMAIL&quot;&apos;&quot;,&quot;GIT_COMMIT_SUBJECT&quot;:&quot;&apos;&quot;$GIT_COMMIT_SUBJECT&quot;&apos;&quot;,&quot;IMAGE&quot;:&quot;&apos;tombatchelor/carsdemo:$GIT_COMMIT&apos;&quot;,&quot;BUILD_STATUS&quot;:&quot;SUCCESS&quot;}&apos;</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <org.jenkinsci.plugins.postbuildscript.PostBuildScript plugin="postbuildscript@2.9.0">
      <config>
        <scriptFiles>
          <org.jenkinsci.plugins.postbuildscript.model.ScriptFile>
            <results>
              <string>SUCCESS</string>
            </results>
            <role>MASTER</role>
            <executeOn>BOTH</executeOn>
            <filePath>/var/jenkins_home/script/checkSecGroups.sh</filePath>
            <scriptType>GENERIC</scriptType>
            <sandboxed>false</sandboxed>
          </org.jenkinsci.plugins.postbuildscript.model.ScriptFile>
        </scriptFiles>
        <groovyScripts/>
        <buildSteps/>
        <markBuildUnstable>false</markBuildUnstable>
      </config>
    </org.jenkinsci.plugins.postbuildscript.PostBuildScript>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.38">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter></cleanupParameter>
      <externalDelete></externalDelete>
      <disableDeferredWipeout>false</disableDeferredWipeout>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
  </buildWrappers>
</project>
