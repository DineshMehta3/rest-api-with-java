apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
spec:
  selector:
    matchLabels:
      app: jenkins
  replicas: 1 # tells deployment to run 2 pods matching the template
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      serviceAccountName: marshaller
      containers:
      - name: jenkins
        image: tombatchelor/jenkins:4.1
        imagePullPolicy: Always
        ports:
        - name: jenkins-ui
          containerPort: 8080
        volumeMounts:
        - name: jenkins-config
          mountPath: /tmp/secrets
        - name: dockersock
          mountPath: "/var/run/docker.sock"
        env:
        - name: GIT_ROOT
          valueFrom:
            configMapKeyRef:
              name: jenkins-env
              key: git.root
        - name: CUSTOMER_ID
          valueFrom:
            configMapKeyRef:
              name: marshaller
              key: customer.id
        - name: TOKEN
          valueFrom:
            secretKeyRef:
              name: observe-key
              key: token
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: aws-cred
              key: access-key
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: aws-cred
              key: secret-key
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/sh
              - -c
              - cp /tmp/secrets/*.xml /var/jenkins_home/
      volumes:
      - name: jenkins-config
        secret:
          secretName: jenkins-config
      - name: dockersock
        hostPath:
          path: /var/run/docker.sock
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: jenkins
  name: jenkins-env
data:
  git.root: tombatchelor
